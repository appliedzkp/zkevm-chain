name: test
on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request_target:

jobs:
  wakeup:
    name: Wake up self-hosted runner
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - run: .github/workflows/wakeup_runner.sh
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_INSTANCE_ID: ${{ secrets.AWS_INSTANCE_ID }}

  test:
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    needs: [wakeup]
    runs-on: heavy-worker
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ (github.event.pull_request && format('refs/pull/{0}/head', github.event.pull_request.number)) || github.ref }}

      - uses: actions/cache@v3
        with:
          path: ${{ runner.temp }}/docker-cache
          key: docker-cache-${{ runner.arch }}-${{ runner.os }}-${{ github.workflow }}-${{ github.run_id }}
          restore-keys: |
            docker-cache-${{ runner.arch }}-${{ runner.os }}-${{ github.workflow }}-

      - name: Build docker images
        run: >
          docker buildx create --name mybuilder --use &&
          docker buildx bake --load
          --set "*.cache-from=type=local,src=$RUNNER_TEMP/docker-cache"
          --set "*.cache-to=type=local,dest=$RUNNER_TEMP/docker-cache-new"
          bootnode dev

      - name: Compile Contracts
        run: |
          cp .env.example .env && docker compose run --no-TTY --rm --entrypoint bash dev -c './scripts/compile_contracts.sh'

      - name: Run coordinator tests
        run: |
          docker compose run --no-TTY --rm --entrypoint bash dev -c './scripts/load_coverage.sh && cargo test && ./scripts/get_coverage.sh'

      - name: Fix docker cache
        if: success() && github.event_name == 'push'
        run: rm -rf "$RUNNER_TEMP/docker-cache" && mv "$RUNNER_TEMP/docker-cache-new" "$RUNNER_TEMP/docker-cache"

      - name: Upload Coverage
        if: success()
        uses: coverallsapp/github-action@1.1.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: build/coverage-report.lcov
